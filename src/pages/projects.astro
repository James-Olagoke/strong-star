---
import Layout from '../layouts/Layout.astro';
const { projects } = await import('../data/projects');

const allTags = Array.from(new Set(projects.flatMap(p => p.tags))).sort((a,b)=>a.localeCompare(b));
---
<Layout title="Projects">
  <header class="mb-10 md:mb-14" data-animate>
    <h1 class="text-3xl md:text-4xl font-extrabold text-white">Projects</h1>
    <p class="mt-3 text-zinc-400 max-w-3xl">Search and filter my recent work.</p>
  </header>

  <section class="rounded-2xl border border-white/10 bg-zinc-900/60 p-4 md:p-6" data-animate>
    <div class="flex flex-wrap gap-2 items-center">
      <input id="project-search" type="text" placeholder="Searchâ€¦"
        class="flex-1 rounded-md border border-white/10 bg-zinc-950/70 px-4 py-2.5 text-zinc-100 placeholder:text-zinc-500 focus:outline-none focus:ring-2 focus:ring-indigo-500" />
      <button data-tag="all" class="chip active rounded-full border border-white/10 bg-zinc-800/70 px-3 py-1.5 text-sm">All</button>
      {allTags.map(t => <button data-tag={t} class="chip rounded-full border border-white/10 bg-zinc-800/50 px-3 py-1.5 text-sm capitalize">{t}</button>)}
    </div>
  </section>

  <section class="mt-8 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
    {projects.map(p => (
      <article class="card card-surface border border-white/10 hover:border-indigo-500/40 overflow-hidden" data-animate
        data-title={p.title.toLowerCase()} data-desc={p.description.toLowerCase()} data-tags={p.tags.join(',')}>
        {p.image && (
          <div class="relative -mx-6 -mt-6 mb-4 aspect-[16/9] overflow-hidden">
            <img src={p.image} alt={p.title} class="h-full w-full object-cover" loading="lazy" />
            <div class="absolute inset-0 ring-1 ring-inset ring-white/10"></div>
          </div>
        )}
        <h3 class="text-lg font-semibold text-white">{p.title}</h3>
        <p class="mt-2 text-zinc-400">{p.description}</p>
        <div class="mt-3 flex flex-wrap gap-2">
          {p.tags.map(t => <span class="rounded-full border border-white/10 bg-zinc-800/60 px-2.5 py-1 text-xs capitalize">{t}</span>)}
        </div>
        <div class="mt-5 flex gap-3">
          <a href={`/projects/${p.slug}`} class="btn-primary">View</a>
          {p.code && <a href={p.code} class="btn-secondary" target="_blank" rel="noreferrer">Code</a>}
        </div>
      </article>
    ))}
  </section>

  <p id="no-results" class="mt-12 text-center text-zinc-500 hidden">No projects match your filters.</p>

  <script is:inline>
    const input = document.querySelector('#project-search');
    const chips = [...document.querySelectorAll('.chip')];
    const cards = [...document.querySelectorAll('article[data-title]')];
    const empty = document.querySelector('#no-results');
    let activeTag = 'all';
    function apply() {
      const q = (input?.value || '').toLowerCase().trim();
      let visible = 0;
      for (const el of cards) {
        const okTxt = !q || el.dataset.title.includes(q) || el.dataset.desc.includes(q);
        const okTag = activeTag === 'all' || (el.dataset.tags || '').split(',').includes(activeTag);
        const show = okTxt && okTag;
        el.classList.toggle('hidden', !show);
        if (show) visible++;
      }
      empty?.classList.toggle('hidden', visible !== 0);
    }
    input?.addEventListener('input', apply);
    chips.forEach(b => b.addEventListener('click', () => {
      chips.forEach(c => c.classList.remove('active', 'bg-zinc-800/70'));
      b.classList.add('active', 'bg-zinc-800/70');
      activeTag = b.dataset.tag || 'all';
      apply();
    }));
    apply();
  </script>
</Layout>
